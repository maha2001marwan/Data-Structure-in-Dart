class Node {
  int data;
  Node? next;

  Node(this.data);
}

class LinkedList {
  Node? head;

  // إضافة عنصر إلى نهاية القائمة
  void append(int data) {
    if (head == null) {
      head = Node(data);
      return;
    }
    Node current = head!;
    while (current.next != null) {
      current = current.next!;
    }
    current.next = Node(data);
  }

  // دالة لإزالة جميع تواجدات قيمة محددة
  void removeAllOccurrences(int value) {
    // إزالة العناصر من البداية
    while (head != null && head!.data == value) {
      head = head!.next;
    }

    if (head == null) return; // القائمة أصبحت فارغة

    Node? current = head;
    Node? prev = head;

    while (current != null) {
      if (current.data == value) {
        prev!.next = current.next;
        current = current.next;
      } else {
        prev = current;
        current = current.next;
      }
    }
  }

  // دالة لطباعة القائمة مع الأسهم
  void printList() {
    Node? current = head;
    String output = '';
    while (current != null) {
      output += '${current.data}';
      if (current.next != null) output += ' -> ';
      current = current.next;
    }
    print(output.isEmpty ? 'Empty list' : output);
  }
}

void main() {
  LinkedList list = LinkedList();
  list.append(2);
  list.append(3);
  list.append(1);
  list.append(2);
  list.append(3);
  list.append(2);
  list.append(4);
  list.append(3);
  list.append(2);
  list.append(5);
  list.append(3);
  list.append(2);
  list.append(3);

  print('القائمة الأصلية:');
  list.printList(); // 2 -> 3 -> 1 -> 2 -> 3 -> 2 -> 4 -> 3 -> 2 -> 5 -> 3 -> 2 -> 3

  // إزالة جميع تواجدات الرقم 2
  list.removeAllOccurrences(2);
  print('\nبعد إزالة جميع الـ 2:');
  list.printList(); // 3 -> 1 -> 3 -> 4 -> 3 -> 5 -> 3 -> 3

  // إزالة جميع تواجدات الرقم 3
  list.removeAllOccurrences(3);
  print('\nبعد إزالة جميع الـ 3:');
  list.printList(); // 1 -> 4 -> 5
}
